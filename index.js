const { Connection, PublicKey } = require('@solana/web3.js');
const TelegramBot = require('node-telegram-bot-api');

// ENV
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const CHAT_ID = process.env.CHAT_ID;
const WALLET_ADDRESS = process.env.WALLET_ADDRESS;

const connection = new Connection('https://api.mainnet-beta.solana.com');
const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: false });

let lastSignature = null;

async function checkNewTx() {
  try {
    const pubKey = new PublicKey(WALLET_ADDRESS);
    const confirmed = await connection.getSignaturesForAddress(pubKey, { limit: 1 });

    if (!confirmed.length) return;

    const signature = confirmed[0].signature;

    if (signature !== lastSignature) {
      lastSignature = signature;

      const txUrl = `https://solscan.io/tx/${signature}`;
      const message = `üö® ‡∏û‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢:\n\nüîó ${txUrl}`;

      await bot.sendMessage(CHAT_ID, message);
      console.log('‚úÖ ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß:', signature);
    } else {
      console.log('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà');
    }
  } catch (err) {
    console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err.message);
  }
}

// Check ‡∏ó‡∏∏‡∏Å 20 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
setInterval(checkNewTx, 20_000);
